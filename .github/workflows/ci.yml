name: Dev Branch CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      -oxygen dev

# Manages concurrent workflow runs to optimize resources.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src

    steps:
      # Checks out the repository code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up Python 3.10 with pip caching for faster dependency installation.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # Installs dependencies from requirements.txt and additional tools.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest streamlit -r requirements.txt

      # Runs pylint to check code style in src/ and tests/.
      - name: Lint code with pylint
        run: pylint src/ tests/
        continue-on-error: true  # Allow pipeline to continue even if linting fails

      # Runs unit tests with pytest.
      - name: Run unit tests with pytest
        run: pytest tests/

      # Launches Streamlit app in the background for endpoint testing.
      - name: Launch Streamlit in background
        run: nohup streamlit run src/app.py --server.headless true &

      # Waits for Streamlit to be available on port 8501.
      - name: Wait for Streamlit to be ready
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:8501'
          timeout: 60

      # Verifies Streamlit endpoint is accessible.
      - name: Verify Streamlit endpoint
        run: curl --fail -I 'http://localhost:8501'
